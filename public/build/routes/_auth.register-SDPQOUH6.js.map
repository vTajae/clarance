{
  "version": 3,
  "sources": ["../../../app/routes/_auth.register.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/_auth.register.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/_auth.register.tsx\");\n  import.meta.hot.lastModified = \"1708672520859.668\";\n}\n// REMIX HMR END\n\nimport React, { useState } from \"react\";\nimport { useActionData } from \"@remix-run/react\";\nimport { json, redirect } from \"@remix-run/cloudflare\";\nimport { UserService } from \"../../api/services/user_service\";\nimport PageTemplate from \"~/components/base/pageTemplate\";\nimport { useTypedSelector } from \"~/state/hooks/user\";\nimport { isAuthenticated } from \"~/utils/session/sessionUtils\";\nexport const loader = async ({\n  request,\n  context\n}) => {\n  if (await isAuthenticated({\n    request,\n    env: context.env\n  })) {\n    // User is already logged in, redirect them to the dashboard or home page\n    return redirect(\"/home\");\n  }\n  return json({});\n};\nasync function registerUser(username, password) {\n  try {\n    return await UserService.registerUser(username, password);\n  } catch (error) {\n    console.error(\"Login failed:\", error);\n    throw new Error(\"Login failed\");\n  }\n}\nexport const action = async ({\n  request,\n  context\n}) => {\n  const formData = await request.formData();\n  const username = formData.get(\"username\");\n  const password = formData.get(\"password\");\n  if (typeof username === \"string\" && typeof password === \"string\") {\n    try {\n      await registerUser(username, password);\n      // console.log(user , \"Login User\")\n      return new Response(null, {\n        status: 303,\n        headers: {\n          Location: \"/login\"\n        }\n      });\n    } catch (error) {\n      // Return a more informative error message to the client\n      return json({\n        error: \"Registration failed.\"\n      }, {\n        status: 501\n      });\n    }\n  } else {\n    // Handle missing username or password\n    return json({\n      error: \"Missing username or password\"\n    }, {\n      status: 400\n    });\n  }\n};\nconst Register = () => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const actionData = useActionData();\n  const [hasAgreedToTerms, setHasAgreedToTerms] = useState(false);\n  const user = useTypedSelector(state => state.user.value);\n  const handleCheckboxChange = event => {\n    setHasAgreedToTerms(event.target.checked);\n  };\n  return <PageTemplate user={user}>\n      <form action=\"/register\" method=\"post\" className=\"max-w-lg mx-auto mt-2 p-8 bg-gradient-to-r from-gray-800 to-gray-900 rounded-lg shadow-2xl\">\n        <div className=\"mb-6\">\n          <label className=\"block text-gray-300 text-base font-semibold mb-2\" htmlFor=\"username\">\n            Email\n          </label>\n          <input className=\"shadow appearance-none border-2 border-gray-700 rounded-lg w-full py-3 px-4 text-white bg-gray-800 leading-tight focus:outline-none focus:border-blue-500\" id=\"username\" type=\"text\" name=\"username\" value={username} placeholder=\"Enter your email\" onChange={e => setUsername(e.target.value)} />\n        </div>\n\n        <div className=\"mb-6\">\n          <label className=\"block text-gray-300 text-base font-semibold mb-2\" htmlFor=\"password\">\n            Password\n          </label>\n          <input className=\"shadow appearance-none border-2 border-gray-700 rounded-lg w-full py-3 px-4 text-white bg-gray-800 mb-3 leading-tight focus:outline-none focus:border-blue-500\" id=\"password\" type=\"password\" name=\"password\" value={password} placeholder=\"Enter your password\" onChange={e => setPassword(e.target.value)} />\n        </div>\n\n        <div className=\"mb-6\">\n          <label htmlFor=\"termsOfService\" className=\"block text-gray-300 text-base font-semibold mb-2\">\n            <input type=\"checkbox\" id=\"termsOfService\" checked={hasAgreedToTerms} onChange={handleCheckboxChange} className=\"mr-2 leading-tight\" />\n            <span className=\"text-sm text-white\">\n              I have read and agree to the <br />\n              <a href=\"/info/terms\" target=\"_blank\" className=\"text-blue-500 hover:text-blue-700\" style={{\n              margin: \"0 5px\"\n            }}>\n                Terms of Service\n              </a>\n              and\n              <a href=\"/info/privacy\" target=\"_blank\" className=\"text-blue-500 hover:text-blue-700\" style={{\n              margin: \"0 5px\"\n            }}>\n                Privacy Policy\n              </a>\n            </span>\n          </label>\n        </div>\n\n        {actionData?.error && <div className=\"text-red-500 text-xs italic\">{actionData.error}</div>}\n        <div className=\"flex items-center justify-between\">\n          <button className=\"bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 text-white font-bold py-3 px-8 rounded-lg shadow-lg focus:outline-none focus:ring-2 focus:ring-blue-300 focus:ring-opacity-50 transition duration-300 ease-in-out transform hover:-translate-y-1 hover:scale-105\" type=\"submit\" disabled={!hasAgreedToTerms} // Disable the button if Terms of Service not agreed\n        >\n            Register\n          </button>\n        </div>\n      </form>\n    </PageTemplate>;\n};\n_s(Register, \"M3Tm1lzI0T7huwGs9TL215w35Ho=\", false, function () {\n  return [useActionData, useTypedSelector];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
