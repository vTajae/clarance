{
  "version": 3,
  "sources": ["../../../app/routes/_clearance.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/_clearance.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/_clearance.tsx\");\n  import.meta.hot.lastModified = \"1708672084362.7742\";\n}\n// REMIX HMR END\n\nimport { json, redirect } from \"@remix-run/cloudflare\";\nimport { Outlet, useLoaderData } from \"@remix-run/react\";\nimport { useDispatch, useTypedSelector } from \"~/state/hooks/user\";\nimport PageTemplate from \"~/components/base/pageTemplate\";\nimport UserStatus from \"~/components/base/userStatus\";\nimport { useEffect } from \"react\";\nimport { setLogout, setUser } from \"~/state/user/userSlice\";\nimport { checkAuthentication } from \"~/utils/checkAuthentication\";\nexport const meta = () => {\n  return [{\n    title: \"New Remix App\"\n  }, {\n    name: \"description\",\n    content: \"Welcome to Remix!\"\n  }];\n};\nexport const loader = async ({\n  request,\n  context: {\n    context\n  }\n}) => {\n  const url = new URL(request.url);\n  const user = await checkAuthentication(context);\n  try {\n    console.log(user, \"user\");\n    if (!user) {\n      return redirect(\"/login\");\n    }\n    return json({\n      user\n    });\n  } catch (error) {\n    if (url.pathname !== \"/login\" || \"/register\") {\n      return redirect(\"/login\");\n    }\n    return json({\n      error: \"User is not authenticated\"\n    });\n  }\n};\nexport default function Clearance() {\n  _s();\n  const {\n    user\n  } = useLoaderData();\n  const ReduxUser = useTypedSelector(state => state.user.value);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (user) {\n      dispatch(setUser(user));\n    } else {\n      dispatch(setLogout());\n    }\n  }, [user, dispatch]);\n\n  // Optionally, to ensure the loading state is visible for a minimum amount of time, \n  // you could use a timeout here to delay setting `isHydrating` to false.\n\n  return <PageTemplate user={ReduxUser.user} context={ReduxUser.context}>\n        {ReduxUser.context.isLoading ? <div>Loading...</div> : <>\n            {ReduxUser.user && <UserStatus user={ReduxUser.user} context={ReduxUser.context} />}\n            <Outlet />\n          </>}\n      </PageTemplate>;\n}\n_s(Clearance, \"f6jr5OCWJu5zVZGtD+8HJe7tsAE=\", false, function () {\n  return [useLoaderData, useTypedSelector, useDispatch];\n});\n_c = Clearance;\nvar _c;\n$RefreshReg$(_c, \"Clearance\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,wBAA+B;AAK/B,IAAAA,gBAA0B;AAuDa;AAhFvC,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,gCAAkC,EAAE;AAAA,EAC7E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA2B;AAC3B,cAAY,IAAI,eAAe;AACjC;AAWO,IAAM,OAAO,MAAM;AACxB,SAAO,CAAC;AAAA,IACN,OAAO;AAAA,EACT,GAAG;AAAA,IACD,MAAM;AAAA,IACN,SAAS;AAAA,EACX,CAAC;AACH;AA0Be,SAAR,YAA6B;AAClC,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,cAAc;AAClB,QAAM,YAAY,iBAAiB,WAAS,MAAM,KAAK,KAAK;AAC5D,QAAM,WAAW,YAAY;AAC7B,+BAAU,MAAM;AACd,QAAI,MAAM;AACR,eAAS,QAAQ,IAAI,CAAC;AAAA,IACxB,OAAO;AACL,eAAS,UAAU,CAAC;AAAA,IACtB;AAAA,EACF,GAAG,CAAC,MAAM,QAAQ,CAAC;AAKnB,SAAO,mDAAC,wBAAa,MAAM,UAAU,MAAM,SAAS,UAAU,SACvD,oBAAU,QAAQ,YAAY,mDAAC,SAAI,0BAAL;AAAA;AAAA;AAAA;AAAA,SAAe,IAAS,sFAClD;AAAA,cAAU,QAAQ,mDAAC,sBAAW,MAAM,UAAU,MAAM,SAAS,UAAU,WAArD;AAAA;AAAA;AAAA;AAAA,WAA8D;AAAA,IACjF,mDAAC,YAAD;AAAA;AAAA;AAAA;AAAA,WAAQ;AAAA,OAF2C;AAAA;AAAA;AAAA;AAAA,SAGrD,KAJD;AAAA;AAAA;AAAA;AAAA,SAKH;AACN;AACA,GAAG,WAAW,gCAAgC,OAAO,WAAY;AAC/D,SAAO,CAAC,eAAe,kBAAkB,WAAW;AACtD,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,WAAW;AAE5B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": ["import_react"]
}
