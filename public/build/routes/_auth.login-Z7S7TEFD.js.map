{
  "version": 3,
  "sources": ["../../../app/routes/_auth.login.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/_auth.login.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/_auth.login.tsx\");\n  import.meta.hot.lastModified = \"1708665028272.0732\";\n}\n// REMIX HMR END\n\nimport React, { useState } from \"react\";\nimport { useActionData } from \"@remix-run/react\";\nimport { json, redirect } from \"@remix-run/cloudflare\";\n\n// import { UserCloudService } from \"../../api/services/CloudFlare/user_service\";\n// import { Credentials } from \"~/props/credentials\";\n// import { LoginCookieData } from \"api/schemas/user/cookie\";\n\nimport { isAuthenticated } from \"~/utils/session/sessionUtils\";\nexport const loader = async ({\n  request,\n  context\n}) => {\n  if (await isAuthenticated({\n    request,\n    env: context.env\n  })) {\n    // User is already logged in, redirect them to the dashboard or home page\n    return redirect(\"/home\");\n  }\n  return json({});\n};\n\n// export const action: ActionFunction = async ({ request, context: {session} }) => {\n//   // Assuming createSessionStorage is imported and env is available\n//  let mySession = session as Session\n//   try {\n//     const formData = await request.formData();\n//     const username = formData.get(\"username\");\n//     const password = formData.get(\"password\");\n\n//     if (typeof username === \"string\" && typeof password === \"string\") {\n//       const user = await UserService.loginUser(username, password);\n\n//       console.log(user, \"user\");\n//       if (user) {\n//         const tokenCreationTime = new Date().getTime(); // Get current timestamp\n\n//         // Set session data\n//         mySession.set(\"auth\", {\n//           username: user.user.username,\n//           id: user.user.id,\n//           accessToken: user.tokens.access_token,\n//           refreshToken: user.tokens.refresh_token,\n//           tokenCreationTime: tokenCreationTime,\n//         });\n\n//         return redirect(\"/home\", {\n//           // headers: {\n//           //   \"Set-Cookie\": await commitSession(session),\n//           // },\n//         });\n//       } else {\n//         return json(\n//           { error: \"Invalid credentials\" },\n//           {\n//             status: 401,\n//           }\n//         );\n//       }\n//     } else {\n//       return json({ error: \"Invalid input\" }, { status: 400 });\n//     }\n//   } catch (error) {\n//     return json({error: \"Error processing request\"}, { status: 500 });\n//   }\n// };\n\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const actionData = useActionData();\n  return <form action=\"/login\" method=\"post\" className=\"max-w-lg mx-auto mt-2 p-8 bg-gradient-to-r from-gray-800 to-gray-900 rounded-lg shadow-2xl\">\n        <div className=\"mb-6\">\n          <label className=\"block text-gray-300 text-base font-semibold mb-2\" htmlFor=\"username\">\n            Email\n          </label>\n          <input className=\"shadow appearance-none border-2 border-gray-700 rounded-lg w-full py-3 px-4 text-white bg-gray-800 leading-tight focus:outline-none focus:border-blue-500\" id=\"username\" type=\"text\" name=\"username\" value={username} placeholder=\"Enter your email\" onChange={e => setUsername(e.target.value)} />\n        </div>\n\n        <div className=\"mb-6\">\n          <label className=\"block text-gray-300 text-base font-semibold mb-2\" htmlFor=\"password\">\n            Password\n          </label>\n          <input className=\"shadow appearance-none border-2 border-gray-700 rounded-lg w-full py-3 px-4 text-white bg-gray-800 mb-3 leading-tight focus:outline-none focus:border-blue-500\" id=\"password\" type=\"password\" name=\"password\" value={password} placeholder=\"Enter your password\" onChange={e => setPassword(e.target.value)} />\n        </div>\n\n        {actionData?.error && <div className=\"text-red-500 text-xs italic\">{actionData.error}</div>}\n\n        <div className=\"flex items-center justify-between space-x-4\">\n          <button className=\"bg-gradient-to-r from-red-500 to-red-600 hover:from-red-600 hover:to-red-700 text-white font-bold py-3 px-8 rounded-lg shadow-lg focus:outline-none focus:ring-2 focus:ring-red-300 focus:ring-opacity-50 transition duration-300 ease-in-out transform hover:-translate-y-1 hover:scale-105\" type=\"submit\">\n            Login\n          </button>\n          {/* <button\n            onClick={handleRegisterClick}\n            className=\"bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 text-white font-bold py-3 px-8 rounded-lg shadow-lg focus:outline-none focus:ring-2 focus:ring-blue-300 focus:ring-opacity-50 transition duration-300 ease-in-out transform hover:-translate-y-1 hover:scale-105\"\n            type=\"button\"\n           >\n            Register\n           </button> */}\n        </div>\n      </form>;\n};\n_s(Login, \"R0IZcnkolwxfB7hkF6Z/nwbogqw=\", false, function () {\n  return [useActionData];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAqBA,mBAAgC;AAEhC,wBAA+B;AAyErB;AA/FV,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,iCAAmC,EAAE;AAAA,EAC9E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA4B;AAC5B,cAAY,IAAI,eAAe;AACjC;AAuEA,IAAM,QAAQ,MAAM;AAClB,KAAG;AACH,QAAM,CAAC,UAAU,WAAW,QAAI,uBAAS,EAAE;AAC3C,QAAM,CAAC,UAAU,WAAW,QAAI,uBAAS,EAAE;AAC3C,QAAM,aAAa,cAAc;AACjC,SAAO,mDAAC,UAAK,QAAO,UAAS,QAAO,QAAO,WAAU,8FAC/C;AAAA,uDAAC,SAAI,WAAU,QACb;AAAA,yDAAC,WAAM,WAAU,oDAAmD,SAAQ,YAAW,qBAAvF;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACA,mDAAC,WAAM,WAAU,6JAA4J,IAAG,YAAW,MAAK,QAAO,MAAK,YAAW,OAAO,UAAU,aAAY,oBAAmB,UAAU,OAAK,YAAY,EAAE,OAAO,KAAK,KAAhT;AAAA;AAAA;AAAA;AAAA,aAAmT;AAAA,SAJrT;AAAA;AAAA;AAAA;AAAA,WAKA;AAAA,IAEA,mDAAC,SAAI,WAAU,QACb;AAAA,yDAAC,WAAM,WAAU,oDAAmD,SAAQ,YAAW,wBAAvF;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACA,mDAAC,WAAM,WAAU,kKAAiK,IAAG,YAAW,MAAK,YAAW,MAAK,YAAW,OAAO,UAAU,aAAY,uBAAsB,UAAU,OAAK,YAAY,EAAE,OAAO,KAAK,KAA5T;AAAA;AAAA;AAAA;AAAA,aAA+T;AAAA,SAJjU;AAAA;AAAA;AAAA;AAAA,WAKA;AAAA,IAEC,YAAY,SAAS,mDAAC,SAAI,WAAU,+BAA+B,qBAAW,SAAzD;AAAA;AAAA;AAAA;AAAA,WAA+D;AAAA,IAErF,mDAAC,SAAI,WAAU,+CACb,6DAAC,YAAO,WAAU,gSAA+R,MAAK,UAAS,qBAA/T;AAAA;AAAA;AAAA;AAAA,WAEA,KAHF;AAAA;AAAA;AAAA;AAAA,WAWA;AAAA,OA5BC;AAAA;AAAA;AAAA;AAAA,SA6BH;AACN;AACA,GAAG,OAAO,gCAAgC,OAAO,WAAY;AAC3D,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAO,qBAAQ;AACf,IAAI;AACJ,aAAa,IAAI,OAAO;AAExB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
