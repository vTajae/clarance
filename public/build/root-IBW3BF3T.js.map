{
  "version": 3,
  "sources": ["css-bundle-plugin-ns:@remix-run/css-bundle", "../../app/root.tsx"],
  "sourcesContent": ["export const cssBundleHref = undefined;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/root.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/root.tsx\");\n}\n// REMIX HMR END\n\nimport { cssBundleHref } from \"@remix-run/css-bundle\";\nimport { Links, LiveReload, Meta, Outlet, Scripts, ScrollRestoration, useLoaderData } from \"@remix-run/react\";\nimport { Provider } from \"react-redux\";\nimport { initializeStore } from \"./state/store\";\nimport stylesheet from \"./index.css\";\nimport { setLogout, setUser } from \"./state/user/userSlice\";\nimport { json, redirect } from \"@remix-run/cloudflare\";\nimport { checkAuthentication } from \"./utils/checkAuthentication\";\nimport { useEffect } from \"react\";\nexport const links = () => [...(cssBundleHref ? [{\n  rel: \"stylesheet\",\n  href: stylesheet\n}] : [])];\nconst store = initializeStore({});\nexport const loader = async ({\n  request,\n  context\n}) => {\n  const url = new URL(request.url);\n\n  // Exclude login and registration pages from authentication check\n  if (url.pathname === \"/login\" || url.pathname === \"/register\") {\n    return json({});\n  }\n  console.log(context, \"ROOT LOADER CONTEXT\");\n  const user = await checkAuthentication({\n    request,\n    context\n  });\n  try {\n    console.log(user, \"user\");\n    if (!user) {\n      return redirect(\"/login\");\n    }\n    return json({\n      user\n    });\n  } catch (error) {\n    if (url.pathname !== \"/login\") {\n      return redirect(\"/login\");\n    }\n    return json({\n      error: \"User is not authenticated\"\n    });\n  }\n};\nexport default function App() {\n  _s();\n  const data = useLoaderData();\n  useEffect(() => {\n    // Handle user state update after component is mounted\n    if (data.user) {\n      store.dispatch(setUser(data.user));\n    } else {\n      store.dispatch(setLogout());\n    }\n  }, [data.user]);\n  return <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Provider store={store}>\n          <Outlet />\n          <ScrollRestoration />\n          <Scripts />\n          <LiveReload />\n        </Provider>\n      </body>\n    </html>;\n}\n_s(App, \"9gbyFTL2tXoDjzUaqJH3yKU6hdQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAO,IAAM,gBAAgB;;;;;;AC0B7B,wBAA+B;AAE/B,IAAAA,gBAA0B;AAmDlB;AA9ER,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,mBAAqB,EAAE;AAAA,EAChE;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAc;AAChB;AAYO,IAAM,QAAQ,MAAM,CAAC,GAAI,gBAAgB,CAAC;AAAA,EAC/C,KAAK;AAAA,EACL,MAAM;AACR,CAAC,IAAI,CAAC,CAAE;AACR,IAAM,QAAQ,gBAAgB,CAAC,CAAC;AAiCjB,SAAR,MAAuB;AAC5B,KAAG;AACH,QAAM,OAAO,cAAc;AAC3B,+BAAU,MAAM;AAEd,QAAI,KAAK,MAAM;AACb,YAAM,SAAS,QAAQ,KAAK,IAAI,CAAC;AAAA,IACnC,OAAO;AACL,YAAM,SAAS,UAAU,CAAC;AAAA,IAC5B;AAAA,EACF,GAAG,CAAC,KAAK,IAAI,CAAC;AACd,SAAO,mDAAC,UAAK,MAAK,MACd;AAAA,uDAAC,UACC;AAAA,yDAAC,UAAK,SAAQ,WAAd;AAAA;AAAA;AAAA;AAAA,aAAsB;AAAA,MACtB,mDAAC,UAAK,MAAK,YAAW,SAAQ,yCAA9B;AAAA;AAAA;AAAA;AAAA,aAAoE;AAAA,MACpE,mDAAC,UAAD;AAAA;AAAA;AAAA;AAAA,aAAM;AAAA,MACN,mDAAC,WAAD;AAAA;AAAA;AAAA;AAAA,aAAO;AAAA,SAJT;AAAA;AAAA;AAAA;AAAA,WAKA;AAAA,IACA,mDAAC,UACC,6DAAC,oBAAS,OACR;AAAA,yDAAC,YAAD;AAAA;AAAA;AAAA;AAAA,aAAQ;AAAA,MACR,mDAAC,uBAAD;AAAA;AAAA;AAAA;AAAA,aAAmB;AAAA,MACnB,mDAAC,aAAD;AAAA;AAAA;AAAA;AAAA,aAAS;AAAA,MACT,mDAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,aAAY;AAAA,SAJd;AAAA;AAAA;AAAA;AAAA,WAKA,KANF;AAAA;AAAA;AAAA;AAAA,WAOA;AAAA,OAdG;AAAA;AAAA;AAAA;AAAA,SAeL;AACJ;AACA,GAAG,KAAK,gCAAgC,OAAO,WAAY;AACzD,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,KAAK;AAEtB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": ["import_react"]
}
